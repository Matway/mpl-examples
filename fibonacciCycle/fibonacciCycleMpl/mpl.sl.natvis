<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="Array">
    <DisplayString Condition="dataSize ==  0">()</DisplayString>
    <DisplayString Condition="dataSize ==  1">({dataBegin[0]})</DisplayString>
    <DisplayString Condition="dataSize ==  2">({dataBegin[0]} {dataBegin[1]})</DisplayString>
    <DisplayString Condition="dataSize ==  3">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]})</DisplayString>
    <DisplayString Condition="dataSize ==  4">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]})</DisplayString>
    <DisplayString Condition="dataSize ==  5">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]})</DisplayString>
    <DisplayString Condition="dataSize ==  6">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]})</DisplayString>
    <DisplayString Condition="dataSize ==  7">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]})</DisplayString>
    <DisplayString Condition="dataSize ==  8">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]})</DisplayString>
    <DisplayString Condition="dataSize ==  9">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]})</DisplayString>
    <DisplayString Condition="dataSize == 10">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]})</DisplayString>
    <DisplayString Condition="dataSize == 11">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]})</DisplayString>
    <DisplayString Condition="dataSize == 12">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]})</DisplayString>
    <DisplayString Condition="dataSize == 13">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]})</DisplayString>
    <DisplayString Condition="dataSize == 14">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]} {dataBegin[13]})</DisplayString>
    <DisplayString Condition="dataSize == 15">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]} {dataBegin[13]} {dataBegin[14]})</DisplayString>
    <DisplayString Condition="dataSize == 16">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]} {dataBegin[13]} {dataBegin[14]} {dataBegin[15]})</DisplayString>
    <DisplayString Condition="dataSize >  16">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]} {dataBegin[13]} {dataBegin[14]} {dataBegin[15]}...</DisplayString>
    <Expand HideRawView="1">
      <Item IncludeView="full" Name="data">dataBegin, [dataSize]nvo</Item>
      <Item Name="size">dataSize</Item>
      <ExpandedItem ExcludeView="full">dataBegin, [dataSize]</ExpandedItem>
      <Item IncludeView="full" Name="reserve">dataReserve</Item>
    </Expand>
  </Type>

  <Type Name="ArrayView">
    <DisplayString Condition="size ==  0">()</DisplayString>
    <DisplayString Condition="size ==  1">({dataBegin[0]})</DisplayString>
    <DisplayString Condition="size ==  2">({dataBegin[0]} {dataBegin[1]})</DisplayString>
    <DisplayString Condition="size ==  3">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]})</DisplayString>
    <DisplayString Condition="size ==  4">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]})</DisplayString>
    <DisplayString Condition="size ==  5">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]})</DisplayString>
    <DisplayString Condition="size ==  6">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]})</DisplayString>
    <DisplayString Condition="size ==  7">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]})</DisplayString>
    <DisplayString Condition="size ==  8">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]})</DisplayString>
    <DisplayString Condition="size ==  9">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]})</DisplayString>
    <DisplayString Condition="size == 10">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]})</DisplayString>
    <DisplayString Condition="size == 11">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]})</DisplayString>
    <DisplayString Condition="size == 12">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]})</DisplayString>
    <DisplayString Condition="size == 13">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]})</DisplayString>
    <DisplayString Condition="size == 14">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]} {dataBegin[13]})</DisplayString>
    <DisplayString Condition="size == 15">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]} {dataBegin[13]} {dataBegin[14]})</DisplayString>
    <DisplayString Condition="size == 16">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]} {dataBegin[13]} {dataBegin[14]} {dataBegin[15]})</DisplayString>
    <DisplayString Condition="size >  16">({dataBegin[0]} {dataBegin[1]} {dataBegin[2]} {dataBegin[3]} {dataBegin[4]} {dataBegin[5]} {dataBegin[6]} {dataBegin[7]} {dataBegin[8]} {dataBegin[9]} {dataBegin[10]} {dataBegin[11]} {dataBegin[12]} {dataBegin[13]} {dataBegin[14]} {dataBegin[15]}...</DisplayString>
    <Expand HideRawView="1">
      <Item Name="data">dataBegin, [size]nvo</Item>
      <Item Name="size">size</Item>
    </Expand>
  </Type>

  <Type Name="Deque">
    <DisplayString Condition="head.dataSize + tail.dataSize ==  0">()</DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  1"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  2"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  3"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  4"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  5"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  6"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  7"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  8"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize ==  9"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize == 10"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]} {9 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 9] : tail.dataBegin[9 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize == 11"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]} {9 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 9] : tail.dataBegin[9 - head.dataSize]} {10 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 10] : tail.dataBegin[10 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize == 12"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]} {9 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 9] : tail.dataBegin[9 - head.dataSize]} {10 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 10] : tail.dataBegin[10 - head.dataSize]} {11 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 11] : tail.dataBegin[11 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize == 13"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]} {9 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 9] : tail.dataBegin[9 - head.dataSize]} {10 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 10] : tail.dataBegin[10 - head.dataSize]} {11 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 11] : tail.dataBegin[11 - head.dataSize]} {12 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 12] : tail.dataBegin[12 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize == 14"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]} {9 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 9] : tail.dataBegin[9 - head.dataSize]} {10 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 10] : tail.dataBegin[10 - head.dataSize]} {11 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 11] : tail.dataBegin[11 - head.dataSize]} {12 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 12] : tail.dataBegin[12 - head.dataSize]} {13 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 13] : tail.dataBegin[13 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize == 15"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]} {9 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 9] : tail.dataBegin[9 - head.dataSize]} {10 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 10] : tail.dataBegin[10 - head.dataSize]} {11 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 11] : tail.dataBegin[11 - head.dataSize]} {12 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 12] : tail.dataBegin[12 - head.dataSize]} {13 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 13] : tail.dataBegin[13 - head.dataSize]} {14 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 14] : tail.dataBegin[14 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize == 16"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]} {9 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 9] : tail.dataBegin[9 - head.dataSize]} {10 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 10] : tail.dataBegin[10 - head.dataSize]} {11 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 11] : tail.dataBegin[11 - head.dataSize]} {12 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 12] : tail.dataBegin[12 - head.dataSize]} {13 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 13] : tail.dataBegin[13 - head.dataSize]} {14 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 14] : tail.dataBegin[14 - head.dataSize]} {15 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 15] : tail.dataBegin[15 - head.dataSize]})]]></DisplayString>
    <DisplayString Condition="head.dataSize + tail.dataSize >  16"><![CDATA[({0 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 0] : tail.dataBegin[0 - head.dataSize]} {1 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 1] : tail.dataBegin[1 - head.dataSize]} {2 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 2] : tail.dataBegin[2 - head.dataSize]} {3 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 3] : tail.dataBegin[3 - head.dataSize]} {4 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 4] : tail.dataBegin[4 - head.dataSize]} {5 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 5] : tail.dataBegin[5 - head.dataSize]} {6 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 6] : tail.dataBegin[6 - head.dataSize]} {7 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 7] : tail.dataBegin[7 - head.dataSize]} {8 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 8] : tail.dataBegin[8 - head.dataSize]} {9 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 9] : tail.dataBegin[9 - head.dataSize]} {10 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 10] : tail.dataBegin[10 - head.dataSize]} {11 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 11] : tail.dataBegin[11 - head.dataSize]} {12 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 12] : tail.dataBegin[12 - head.dataSize]} {13 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 13] : tail.dataBegin[13 - head.dataSize]} {14 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 14] : tail.dataBegin[14 - head.dataSize]} {15 < head.dataSize ? head.dataBegin[head.dataSize - 1 - 15] : tail.dataBegin[15 - head.dataSize]}...]]></DisplayString>
    <Expand HideRawView="1">
      <Item ExcludeView="full" Name="size">head.dataSize + tail.dataSize</Item>
      <CustomListItems ExcludeView="full">
        <Variable Name="index" InitialValue="0"/>
        <Loop>
          <If Condition="index == head.dataSize">
            <Break/>
          </If>
          <Item Name="[{index}]">head.dataBegin[head.dataSize - 1 - index]</Item>
          <Exec>++index</Exec>
        </Loop>
        <Exec>index = 0</Exec>
        <Loop>
          <If Condition="index == tail.dataSize">
            <Break/>
          </If>
          <Item Name="[{head.dataSize + index}]">tail.dataBegin[index]</Item>
          <Exec>++index</Exec>
        </Loop>
      </CustomListItems>
      <Item IncludeView="full" Name="head">head</Item>
      <Item IncludeView="full" Name="tail">tail</Item>
    </Expand>
  </Type>

  <Type Name="HashTable">
    <DisplayString>size = {dataSize}</DisplayString>
    <Expand HideRawView="1">
      <CustomListItems ExcludeView="full">
        <Variable Name="bucket" InitialValue="0"/>
        <Variable Name="item" InitialValue="0"/>
        <Loop>
          <If Condition="bucket == data.dataSize">
            <Break/>
          </If>
          <Exec>item = 0</Exec>
          <Loop>
            <If Condition="item == data.dataBegin[bucket].dataSize">
              <Break/>
            </If>
            <Item Name="{data.dataBegin[bucket].dataBegin[item].key}">data.dataBegin[bucket].dataBegin[item].value</Item>
            <Exec>++item</Exec>
          </Loop>
          <Exec>++bucket</Exec>
        </Loop>
      </CustomListItems>
      <Item IncludeView="full" Name="data">data</Item>
      <Item IncludeView="full" Name="size">dataSize</Item>
    </Expand>
  </Type>

  <Type Name="IntrusiveStack">
    <Expand HideRawView="1">
      <CustomListItems ExcludeView="full">
        <Variable Name="index" InitialValue="0"/>
        <Variable Name="item" InitialValue="last"/>
        <Loop>
          <If Condition="item == nullptr">
            <Break/>
          </If>
          <Item Name="[{index}]">*item</Item>
          <Exec>++index</Exec>
          <Exec>item += (item->prev.data - (size_t)item) / sizeof(*item)</Exec>
        </Loop>
      </CustomListItems>
      <Item IncludeView="full" Name="last">last</Item>
    </Expand>
  </Type>

  <Type Name="Mref">
    <DisplayString Condition="data == 0">NIL</DisplayString>
    <DisplayString Condition="data != 0">{data, X}</DisplayString>
    <Expand HideRawView="1">
      <Item Name="data">data, X</Item>
    </Expand>
  </Type>

  <Type Name="Owner">
    <DisplayString Condition="memory == nullptr">NIL</DisplayString>
    <DisplayString Condition="memory != nullptr">{memory, na} owner</DisplayString>
    <Expand HideRawView="1">
      <Item Name="data">memory</Item>
    </Expand>
  </Type>

  <Type Name="Pool">
    <DisplayString>reserve = {dataSize}</DisplayString>
    <Expand HideRawView="1">
      <CustomListItems>
        <Variable Name="ITEM_SIZE" InitialValue="sizeof(*data) &lt; 4 ? 4 : sizeof(*data)"/>
        <Variable Name="size" InitialValue="0"/>
        <Variable Name="index" InitialValue="0"/>
        <Loop>
          <If Condition="index == dataSize">
            <Break/>
          </If>
          <If Condition="(*((unsigned char*)data + ITEM_SIZE * dataSize + (index &gt;&gt; 3)) &amp; 1 &lt;&lt; (index &amp; 7)) != 0">
            <Exec>++size</Exec>
          </If>
          <Exec>++index</Exec>
        </Loop>
        <Item Name="size">size</Item>
        <Exec>index = 0</Exec>
        <Loop>
          <If Condition="index == dataSize">
            <Break/>
          </If>
          <If Condition="(*((unsigned char*)data + ITEM_SIZE * dataSize + (index &gt;&gt; 3)) &amp; 1 &lt;&lt; (index &amp; 7)) != 0">
            <Item Name="[{index}]">data[ITEM_SIZE / sizeof(*data) * index]</Item>
          </If>
          <Exec>++index</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="String">
    <DisplayString>{chars.dataBegin, [chars.dataSize - 1]na}</DisplayString>
    <StringView>chars.dataBegin, [chars.dataSize - 1]na</StringView>
    <Expand HideRawView="1">
      <ExpandedItem ExcludeView="full">chars</ExpandedItem>
      <Item IncludeView="full" Name="chars">chars</Item>
    </Expand>
  </Type>

  <Type Name="StringView">
    <DisplayString>{stringData, [stringSize]na}</DisplayString>
    <StringView>stringData, [stringSize]</StringView>
    <Expand HideRawView="1">
      <Item Name="data">stringData, [stringSize]</Item>
      <Item Name="size">stringSize</Item>
    </Expand>
  </Type>

  <Type Name="list">
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na} {this->f9, na} {this->f10, na} {this->f11, na} {this->f12, na} {this->f13, na} {this->f14, na} {sizeof(this->f16), this->f15, na}...</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na} {this->f9, na} {this->f10, na} {this->f11, na} {this->f12, na} {this->f13, na} {this->f14, na} {this->f15, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na} {this->f9, na} {this->f10, na} {this->f11, na} {this->f12, na} {this->f13, na} {this->f14, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na} {this->f9, na} {this->f10, na} {this->f11, na} {this->f12, na} {this->f13, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na} {this->f9, na} {this->f10, na} {this->f11, na} {this->f12, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na} {this->f9, na} {this->f10, na} {this->f11, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na} {this->f9, na} {this->f10, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na} {this->f9, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na} {this->f8, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na} {this->f7, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na} {this->f6, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na} {this->f5, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na} {this->f4, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na} {this->f3, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na} {this->f2, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na} {this->f1, na})</DisplayString>
    <DisplayString Optional="1">({this->f0, na})</DisplayString>
    <DisplayString>()</DisplayString>
  </Type>
</AutoVisualizer>
